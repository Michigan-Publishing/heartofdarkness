{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["getBodyContent","data","items","rawBody","split","length","Main","_Component","apply","arguments","_inheritsLoose","prototype","render","navigation","name","links","this","props","map","link","href","slug","title","alt","useMarkdownInsteadOfMDX","window","MSInputMethodContext","document","documentMode","ex","isIE11","React","createElement","Layout","Content","my","p","Heading","words","Markdown","MDXRenderer","body","Navigation","ml","mr","imageSrc","Component","ScopedMain","withMDXScope","DataWrapper","nodes","getNodeTree","key","level","output","filter","item","node","frontmatter","parentKey","_ref","fields","children","sortOrder","code","wordCount","sort","a","b","useStaticQuery","allMdx","edges","Object","assign","written","layoutType","undefined"],"mappings":"kSAgBA,SAASA,EAAeC,GACtB,MAAMC,EAAQD,EAAKE,QAAQC,MAAM,OAEjC,OAAOF,EAAMG,OAAS,EAAIH,EAAMA,EAAMG,OAAS,GAAK,GAW/C,IAAMC,EAAI,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAkCd,OAlCcC,YAAAJ,EAAAC,GAAAD,EAAAK,UACfC,OAAA,WAOE,IAAIC,EAAa,CACfC,KAAM,kBACNC,MARYC,KAAKC,MAAMF,MAAMG,IAAIC,IAAI,CACrCC,KAAMD,EAAKE,KACXP,KAAMK,EAAKG,MACXC,IAAKJ,EAAKG,UAOZ,MAAME,EApBV,WACE,IACE,QAASC,OAAOC,wBAA0BC,SAASC,aACnD,MAAOC,GACP,OAAO,GAgByBC,KAAY,EAE5C,OACEC,IAAAC,cAACC,IAAM,KACLF,IAAAC,cAACC,IAAOC,QAAO,CAACC,GAAI,GAAIC,EAAG,IACzBL,IAAAC,cAACK,IAAO,KAAErB,KAAKC,MAAMK,SAnCXrB,EAoCEe,KAAKC,OAnCbqB,OAAiC,IAAxBtC,EAAeC,MAoCzBuB,EACCO,IAAAC,cAACO,IAAQ,KAAEvC,EAAegB,KAAKC,QAE/Bc,IAAAC,cAACQ,IAAgBxB,KAAKC,MAAQD,KAAKC,MAAMwB,OAG7CV,IAAAC,cAACU,IAAU,CACTC,GAAG,OACHC,GAAG,OACHC,SAAUA,IACVhC,WAAYA,MA/CxB,IAAoBZ,GAoDjBK,EAlCc,CAASwC,aAoC1B,MAAMC,EAAaC,uBAAa1C,GA4BhC,SAAS2C,EAAYhC,GACnB,MA4BMiC,EAvDR,SAASC,EAAYD,EAAOE,EAAYC,QAAT,IAAHD,MAAM,WAAW,IAALC,MAAQ,GAC9C,MACMC,EADWJ,EAAMK,OAAOC,GAAQA,EAAKC,KAAKC,YAAYC,YAAcP,GAClDlC,IAAI0C,IAAA,IAAC,KAAEH,GAAMG,EAAA,MAAM,CACzCtC,MAAOmC,EAAKC,YAAYpC,MACxBD,KAAMoC,EAAKI,OAAOxC,KAClBgC,MAAOA,EACPS,SAAUX,EAAYD,EAAOO,EAAKC,YAAYN,IAAKC,EAAQ,GAC3DU,UAAWN,EAAKC,YAAYK,UAC5B5D,QAASsD,EAAKtD,QACdsC,KAAMgB,EAAKO,KAAKvB,KAChBH,MAAOmB,EAAKQ,UAAU3B,SAaxB,OAVAgB,EAAOY,KAAK,CAACC,EAAGC,IACVD,EAAEJ,UAAYK,EAAEL,WACV,EAENI,EAAEJ,UAAYK,EAAEL,UACX,EAEF,GAGFT,EAgCOH,CA5BDkB,YAAe,cA4BGC,OAAOC,QAChC,SAAET,EAAQ,KAAErB,EAAI,MAAEnB,GAAU4B,EAAM,GAExC,OAAOnB,IAAAC,cAACe,EAAUyB,OAAAC,OAAA,GAAKxD,EAAWiC,EAAM,GAAE,CAAEnC,MAAO+C,KAGrDb,EAAYS,YAAc,CACxBpC,MAAO,oBACPoD,QAAS,aACTC,WAAY,OACZvB,IAAK,oBACLO,eAAWiB,EACXb,UAAW,GAGEd","file":"component---src-pages-index-js-6b1fc730eb4797e025e1.js","sourcesContent":["import React, { Component } from \"react\"\nimport { useStaticQuery } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Navigation from \"../components/Navigation\"\nimport Markdown from \"../components/markdown\"\nimport imageSrc from \"./quadrant_map.png\"\nimport { escapeWithRegexp } from \"../utils/escape\"\nimport styled from \"styled-components\"\nimport MDXRenderer from \"gatsby-mdx/mdx-renderer\"\nimport { withMDXScope } from \"gatsby-mdx/context\"\nimport Heading from \"../components/Heading\"\n\nfunction hasContent(data) {\n  return data.words || getBodyContent(data) != \"\"\n}\n\nfunction getBodyContent(data) {\n  const items = data.rawBody.split(\"---\")\n\n  return items.length > 0 ? items[items.length - 1] : \"\"\n}\n\nfunction isIE11() {\n  try {\n    return !!window.MSInputMethodContext && !!document.documentMode\n  } catch (ex) {\n    return false\n  }\n}\n\nexport class Main extends Component {\n  render() {\n    const links = this.props.links.map(link => ({\n      href: link.slug,\n      name: link.title,\n      alt: link.title,\n    }))\n\n    var navigation = {\n      name: \"Main Navigation\",\n      links,\n    }\n    const useMarkdownInsteadOfMDX = isIE11() || true\n\n    return (\n      <Layout>\n        <Layout.Content my={24} p={20}>\n          <Heading>{this.props.title}</Heading>\n          {hasContent(this.props) &&\n            (useMarkdownInsteadOfMDX ? (\n              <Markdown>{getBodyContent(this.props)}</Markdown>\n            ) : (\n              <MDXRenderer {...this.props}>{this.props.body}</MDXRenderer>\n            ))}\n\n          <Navigation\n            ml=\"auto\"\n            mr=\"auto\"\n            imageSrc={imageSrc}\n            navigation={navigation}\n          />\n        </Layout.Content>\n      </Layout>\n    )\n  }\n}\nconst ScopedMain = withMDXScope(Main)\n\nfunction getNodeTree(nodes, key = null, level = 0) {\n  const newNodes = nodes.filter(item => item.node.frontmatter.parentKey === key)\n  const output = newNodes.map(({ node }) => ({\n    title: node.frontmatter.title,\n    slug: node.fields.slug,\n    level: level,\n    children: getNodeTree(nodes, node.frontmatter.key, level + 1),\n    sortOrder: node.frontmatter.sortOrder,\n    rawBody: node.rawBody,\n    body: node.code.body,\n    words: node.wordCount.words,\n  }))\n\n  output.sort((a, b) => {\n    if (a.sortOrder < b.sortOrder) {\n      return -1\n    }\n    if (a.sortOrder > b.sortOrder) {\n      return 1\n    }\n    return 0\n  })\n\n  return output\n}\n\nfunction DataWrapper(props) {\n  const data = useStaticQuery(graphql`\n    query IndexQuery {\n      allMdx {\n        edges {\n          node {\n            id\n            rawBody\n            code {\n              body\n            }\n            wordCount {\n              words\n            }\n            fields {\n              slug\n            }\n            frontmatter {\n              key\n              parentKey\n              title\n              sortOrder\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const nodes = getNodeTree(data.allMdx.edges)\n  const { children, body, title } = nodes[0]\n\n  return <ScopedMain {...props} {...nodes[0]} links={children} />\n}\n\nDataWrapper.frontmatter = {\n  title: \"Heart of Darkness\",\n  written: \"2019-04-01\",\n  layoutType: \"post\",\n  key: \"heart-of-darkness\",\n  parentKey: undefined,\n  sortOrder: 1,\n}\n\nexport default DataWrapper\n"],"sourceRoot":""}